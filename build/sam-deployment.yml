version: 0.2

# Base permissions for SAM: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-permissions.html

env:
  secrets-manager:
    docker_username: dockerhub:dockerhub_username
    docker_password: dockerhub:dockerhub_password

phases:
  install:
    runtime-versions:
      python: 3.7

  pre_build:
    commands:
      - if [ -z "${image}" ]; then echo "ERROR - must declare 'image' where you're using codebuild! (What repo inside ECR to push to). Quitting"; exit -1; fi

      # First do dockerhub, to not hit limit on pulling the base docker image:
      # (Added to codebuild itself, you don't need to populate these)
      - docker login -u "${docker_username}" -p "${docker_password}"
      # Must maintain *both* public/private, until lambda supports running off public images:
      - aws ecr-public get-login-password --region "${AWS_REGION}" | docker login --username AWS --password-stdin public.ecr.aws
      - aws ecr get-login-password --region "${AWS_REGION}" | docker login --username AWS --password-stdin $(aws sts get-caller-identity --query Account --output text).dkr.ecr.${AWS_REGION}.amazonaws.com

      - PUBLIC_REPOSITORY_URI="public.ecr.aws/u8i1y1d8/${image}"
      - PRIVATE_REPOSITORY_URI="$(aws sts get-caller-identity --query Account --output text).dkr.ecr.${AWS_REGION}.amazonaws.com/${image}"

      # Inject the github hash to version file, so you can check if deployed on the health endpoint.
      - echo "{\"version\":\"${CODEBUILD_RESOLVED_SOURCE_VERSION}\"}" > SearchAPI/version.json

      # Setup SAM function name:
      - SAM_Deployment_Name="SearchAPI-${image}"


  build:
    commands:
      - yum upgrade -y
      - sam build

      # Make sure "latest" tag gets updated too. `sam deploy` only pushes a image with a weird hash, so each one is unique.
      - docker tag "searchapifunction:sam_image" "${PRIVATE_REPOSITORY_URI}:latest" && docker push "${PRIVATE_REPOSITORY_URI}:latest"
      - docker tag "searchapifunction:sam_image" "${PUBLIC_REPOSITORY_URI}:latest" && docker push "${PUBLIC_REPOSITORY_URI}:latest"

      # The lambda function name also consequently makes a good stack-name. If you change the "SamFuncName" key, also change in template.yaml
      - sam deploy --region ${AWS_REGION} --image-repository ${PRIVATE_REPOSITORY_URI} --parameter-overrides SamFuncName=${SAM_Deployment_Name} --stack-name ${SAM_Deployment_Name} --tags KeyName1=SAM_SearchAPI --capabilities CAPABILITY_IAM --no-fail-on-empty-changeset
      - aws lambda wait function-updated --region ${AWS_REGION} --function-name ${SAM_Deployment_Name}
