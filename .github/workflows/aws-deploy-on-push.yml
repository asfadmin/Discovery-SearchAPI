name: Update SearchAPI Stack

on:
  # Github Actions doesn't support Yaml Anchors! :smiling_face_with_tear:
  # If you add a branch, change it in ALL triggers:
  push:
    branches-ignore:
      - prod

  pull_request:
    branches-ignore:
      - prod
    types:
      - opened
      - reopened
      - synchronize

jobs:
  deploy-SearchAPI:
    runs-on: ubuntu-latest
    environment: non-prod
    # Don't run ANY of this unless the PR came from one of our branches (so forks don't trigger)
    # if: github.event.pull_request.head.repo.full_name == github.repository
    steps:

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: test
        if: ${{ github.event.push }}
        run: |
          echo "HITTTTT"

      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # In this step, this action saves a list of existing images,
      # the cache is created without them in the post run.
      # It also restores the cache if it exists.
      - uses: satackey/action-docker-layer-caching@v0.0.11
        # Ignore the failure of a step and avoid terminating the job.
        continue-on-error: true

      - name: Log into Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, Tag, and Push Container
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: searchapi
          IMAGE_TAG: ${{ github.ref_name }}
        run: |
          docker build --pull --build-arg GIT_COMMIT_HASH="${GITHUB_SHA}" -t "${REGISTRY}/${REPOSITORY}:${IMAGE_TAG}" .
          docker push "${REGISTRY}/${REPOSITORY}:${IMAGE_TAG}"

      - name: Create name for SearchAPI Stack
        id: stack-name
        env:
          BRANCH: ${{ github.ref_name }}
        # Replace all non-alpha chars with a '-' in branch name:
        run: |
          echo "::set-output name=name::SearchAPI-${BRANCH//[^[:alnum:]]/-}"

      - name: Deploy SearchAPI Stack
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        id: searchapi-stack
        with:
          name: ${{ steps.stack-name.outputs.name }}
          template: cloudformation/SearchAPI-stack.yml
          parameter-overrides: "GitHubBranch=${{ github.ref_name }},Maturity=devel"
          no-fail-on-empty-changeset: "1"

      # If the stack already exists, it won't update to the latest image.
      - name: Update Lambda Function
        env:
          FUNCTION: ${{ steps.searchapi-stack.outputs.LambdaFunction }}
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: searchapi
          IMAGE_TAG: ${{ github.ref_name }}
        run: |
          aws lambda update-function-code \
              --function-name "${FUNCTION}" \
              --image-uri "${REGISTRY}/${REPOSITORY}:${IMAGE_TAG}"
          aws lambda wait function-updated \
              --function-name "${FUNCTION}"

      ### TODO: Make this it's own (file?), that doesn't run on push. ONLY pr.
      - name: Run Pytest
        run: |
          echo "TODO"
