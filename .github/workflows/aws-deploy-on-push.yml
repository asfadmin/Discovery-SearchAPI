name: Update Main Stack

on:
  push:

jobs:
  deploy_cf:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Update Strings Macro
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: CFN-StringMacros
          template: cloudformation/single-deploy-string-macros.yml
          capabilities: CAPABILITY_IAM
          no-fail-on-empty-changeset: "1"

      - name: Update SearchAPI ECR
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: ECR-SearchAPI
          template: cloudformation/single-deploy-ecr.yml
          no-fail-on-empty-changeset: "1"

      # In this step, this action saves a list of existing images,
      # the cache is created without them in the post run.
      # It also restores the cache if it exists.
      - uses: satackey/action-docker-layer-caching@v0.0.11
        # Ignore the failure of a step and avoid terminating the job.
        continue-on-error: true

      - name: Log into Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, Tag, and Push Container
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: searchapi
          IMAGE_TAG: ${{ github.ref_name }}
        run: |
          docker build -t "${REGISTRY}/${REPOSITORY}:${IMAGE_TAG}" .
          docker push "${REGISTRY}/${REPOSITORY}:${IMAGE_TAG}"

      - name: Create name for SearchAPI Stack
        id: stack-name
        env:
          BRANCH: ${{ github.ref_name }}
        # Replace all non-alpha chars with a '-' in branch name:
        run: |
          echo "::set-output name=name::SearchAPI-${BRANCH//[^[:alnum:]]/-}"

      - name: Deploy SearchAPI Stack
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        id: searchapi-stack
        with:
          name: ${{ steps.stack-name.outputs.name }}
          template: cloudformation/SearchAPI-stack.yml
          parameter-overrides: "GitHubBranch=${{ github.ref_name }}"
          no-fail-on-empty-changeset: "1"

