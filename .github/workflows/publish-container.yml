name: Publish the Container

on:
  push:
    branches:
      - prod
      - test
      - devel
      - lambda-container-refactor # tmp

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  Publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Save Version
        run: |
          echo "{\"version\": \"$GITHUB_SHA\"}" > SearchAPI/version.json

      - name: Configure AWS credentials (Test)
        uses: aws-actions/configure-aws-credentials@v1
        if: "!contains(github.ref, 'prod')"
        with:
          aws-access-key-id: ${{ secrets.TEST_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.TEST_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      ## TODO: Add this user:
      - name: Configure AWS credentials (Prod)
        uses: aws-actions/configure-aws-credentials@v1
        if: contains(github.ref, 'prod')
        with:
          aws-access-key-id: ${{ secrets.PROD_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.PROD_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      
      - name: Save AWS ECR password
        id: ecr-pass
        run: echo "::set-output name=password::$(aws ecr-public get-login-password --region us-east-1)"

      - name: Login to Amazon ECR
        uses: docker/login-action@v1
        with:
          registry: public.ecr.aws
          username: AWS
          password: ${{ steps.ecr-pass.outputs.password }}
          # password: $(aws ecr-public get-login-password --region us-east-1)
        env:
          AWS_REGION: us-east-1

      - name: Build, tag, and push the image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: public.ecr.aws
          ECR_REPOSITORY: u8i1y1d8/searchapi-devel
          IMAGE_TAG: latest
        run: |
          # Build a docker container and push it to ECR
          IMAGE="$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
          docker build -t $IMAGE .
          echo "Pushing image to ECR... ($IMAGE)"
          docker push $IMAGE