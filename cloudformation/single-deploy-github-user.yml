AWSTemplateFormatVersion: 2010-09-09

Description: "The user GitHub uses to deploy SearchAPI."

Resources:

  ManageStackUser:
    Type: AWS::IAM::User
    Properties:
      UserName: GitHub-manage-SearchAPI-stacks
      Policies:

        - PolicyName: SearchAPIManagerCloudformation
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - cloudformation:DescribeStacks
                  - cloudformation:CreateStack
                  - cloudformation:DeleteStack
                  - cloudformation:UpdateStack
                  - cloudformation:DescribeChangeSet
                  - cloudformation:CreateChangeSet
                  - cloudformation:DeleteChangeSet
                  - cloudformation:ExecuteChangeSet
                  - cloudformation:SetStackPolicy
                  - cloudformation:ValidateTemplate
                  - cloudformation:GetTemplateSummary
                Resource:
                  # The String Macro's stack:
                  - !Sub "arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:transform/String"
                  # - !Sub "arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/CFN-StringMacros/*"
                  # The SearchAPI stack(s):
                  - !Sub "arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/SearchAPI-*/*"
                  # Update the ECR stack:
                  # - !Sub "arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/ECR-SearchAPI/*"

        # - PolicyName: RunStringMacroLambda
        #   PolicyDocument:
        #     Statement:
        #       - Effect: Allow
        #         Action:
        #           - lambda:InvokeFunction
        #         Resource:
        #           - !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:CFN-StringMacros-TransformFunction-*"

        - PolicyName: SearchAPIManagerECR
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  # Minimum for pulling/pushing:
                  - ecr:BatchGetImage
                  - ecr:BatchCheckLayerAvailability
                  - ecr:CompleteLayerUpload
                  - ecr:GetDownloadUrlForLayer
                  - ecr:InitiateLayerUpload
                  - ecr:PutImage
                  - ecr:UploadLayerPart
                  # Extra's for updating the registry
                  # - ecr:CreateRepository
                  # - ecr:DescribeRepositories
                  # - ecr:GetRepositoryPolicy
                  # - ecr:SetRepositoryPolicy
                  # - ecr:DescribeImages
                  # - ecr:ListImages
                Resource:
                  - !Sub "arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/searchapi"

        - PolicyName: SearchAPIManagerIAM
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - iam:GetRole
                  - iam:GetRolePolicy
                  - iam:CreateRole
                  - iam:DeleteRole
                  - iam:DeleteRolePolicy
                  - iam:PutRolePolicy
                  - iam:PassRole
                Resource:
                  # Lambda service role:
                  - !Sub "arn:aws:iam::${AWS::AccountId}:role/SearchAPI-*-LambdaServiceRole-*"
                  # Api Gateway V2 role:
                  - !Sub "arn:aws:iam::${AWS::AccountId}:role/SearchAPI-*-ApiGatewayServiceRole-*"

        - PolicyName: SearchAPIManagerLambda
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - lambda:CreateFunction
                  - lambda:DeleteFunction
                  - lambda:GetFunction
                  - lambda:GetFunctionConfiguration
                  - lambda:UpdateFunctionConfiguration
                  - lambda:UpdateFunctionCode
                Resource:
                  - !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:SearchAPI-*-LambdaContainer-*"

        - PolicyName: AllowEcrLogin
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - ecr:GetAuthorizationToken
                Resource: "*"

        - PolicyName: SearchAPIManagerApiGateway
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - apigateway:POST
                Resource:
                  - !Sub arn:aws:apigateway:${AWS::Region}::/tags/*
                  - !Sub arn:aws:apigateway:${AWS::Region}::/apis

