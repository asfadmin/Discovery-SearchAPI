AWSTemplateFormatVersion: 2010-09-09

Description: "One SearchAPI Deployment per GitHub Branch."

Parameters:
  LambdaDockerRegistry:
    Type: String
    Description: "Docker container containing the API."
    Default: "public.ecr.aws/o4c4z2t6/searchapi"
  
  GitHubBranch:
    Type: String
    Description: "Branch to run from. This also becomes the tag for the container in ECR."
    Default: "prod"
    AllowedPattern: "[A-Za-z0-9-]+"
  
  # # Not sure if this is the best place for this yet. Might need to be in the GH action:
  # CreateUatApi:
  #   Type: String
  #   AllowedValues: ["True", "False"]
  #   Description: "[True/False] Also create a lambda API pointed at CMR UAT."
  #   Default: "False"

Resources:

  S3ArtifactBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        # You need the Strings macro to use this (cloudformation/cf-strings-macro.yml):
        Fn::Transform:
          Name: String
          Parameters:
            InputString: !Sub "${AWS::StackName}-artifact-storage"
            Operation: Lower
      LifecycleConfiguration:
        Rules:
          - Id: DeleteBuildArtifactsAfterOneWeek
            ExpirationInDays: 7
            Status: Enabled

  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "codepipeline.amazonaws.com"
            Action: "sts:AssumeRole"
      Policies:
        - PolicyName: AllowGitHubConnection
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - codestar-connections:UseConnection
                Resource: !GetAtt GitHubConnection.ConnectionArn
              - Effect: Allow
                Action:
                  - s3:PutObject
                Resource: !Sub arn:aws:s3:::${S3ArtifactBucket}/*


  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "codebuild.amazonaws.com"
            Action: "sts:AssumeRole"
      Policies:
        - PolicyName: AllowCodeBuildLogsTwo
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${AWS::StackName}-*"


  GitHubConnection:
    Type: AWS::CodeStarConnections::Connection
    Properties:
      ProviderType: GitHub
      ConnectionName:
        # You need the Strings macro to use this (cloudformation/cf-strings-macro.yml):
        Fn::Transform:
          Name: String
          Parameters:
            InputString: !Sub "${AWS::StackName}-github-connect"
            Operation: MaxLength
            Length: 32

  BuildPushDocker:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        # Different ComputeTypes:
        # https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-compute-types.html
        ComputeType: BUILD_GENERAL1_SMALL
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Type: PLAINTEXT
            Name: DOCKER_IMAGE_URI
            Value: !Ref LambdaDockerRegistry
          - Type: PLAINTEXT
            Name: GITHUB_BRANCH
            Value: !Ref GitHubBranch
        Image: aws/codebuild/amazonlinux2-x86_64-standard:4.0
        PrivilegedMode: true # We need docker sadly
      LogsConfig:
        CloudWatchLogs:
          Status: ENABLED
      ServiceRole: !Ref CodeBuildRole
      Source:
        Type: CODEPIPELINE
        BuildSpec: cloudformation/codebuild-update-docker.yml
      TimeoutInMinutes: 20 # Default is 60



  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Ref AWS::StackName
      ArtifactStore:
        Type: S3
        Location: !Ref S3ArtifactBucket
      RoleArn: !GetAtt CodePipelineRole.Arn
      Stages:
        - Name: Source-GitHub
          Actions:
            # CodeStarSourceConnection is required for 'GitHub v2' pipelines
            # https://docs.aws.amazon.com/codepipeline/latest/userguide/update-github-action-connections.html
            - Name: Pull-from-GitHub
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: 1
                Provider: CodeStarSourceConnection
              Configuration:
                ConnectionArn: !GetAtt GitHubConnection.ConnectionArn
                FullRepositoryId: "asfadmin/Discovery-SearchAPI"
                BranchName: !Ref GitHubBranch
              OutputArtifacts:
                - Name: SourceCode
        - Name: Build-Push-Container
          Actions:
            - Name: Build-Push-Container
              InputArtifacts:
                - Name: SourceCode
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref BuildPushDocker

# Outputs:
