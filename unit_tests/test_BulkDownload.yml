tests:
- full access account:
    account: FullAccess
    python_version: [2,3] # <- Default
    args: ""  # <- Default
    expected_outcome: success
    # print: True

- bad user pass account:
    account: DoesntExist
    expected_outcome: bad_creds

- no study area account:
    account: NoStudyArea
    expected_outcome: bad_study_area

- minimal eulas checked account:
    # ASF Eula not checked, so throws right away
    account: MinimalEulas
    expected_outcome: bad_eula
    # print: True

- only ASF eula checked, no download:
    # Didn't download data, so check for products never happens:
    account: OnlyEulaASF
    expected_outcome: success
    # print: True

# NOTE: come back to this. NOT having sentinel-3/Meris eulas checked doesn't
# appear to be changing anything....
- only ASF eula checked, download unrestricted data:
    # Same test as above, but this tries to do something with the cookie:
    account: OnlyEulaASF
    args: "input_file.csv"
    expected_outcome: success
    timeout: Null

- able to download csv file:
    account: FullAccess
    args: "input_file.csv"
    timeout: Null #<- timeout = Null/int seconds
    expected_outcome: success
    # print: True

- able to download metalink file:
    account: FullAccess
    args: "SE_Alaska_1.metalink"
    timeout: Null
    expected_outcome: success
    # print: True

- able to download products:
    account: FullAccess
    timeout: Null
    products:
      - https://datapool.asf.alaska.edu/METADATA_RAW/SB/S1B_IW_RAW__0SDV_20190824T145948_20190824T150021_017729_0215B7_4E1C.iso.xml
      - https://datapool.asf.alaska.edu/METADATA_SLC/SB/S1B_IW_SLC__1SDV_20190824T145950_20190824T150018_017729_0215B7_E1B1.iso.xml
      - https://datapool.asf.alaska.edu/METADATA_GRD_HD/SB/S1B_IW_GRDH_1SDV_20190824T145952_20190824T150017_017729_0215B7_8AC4.iso.xml
    expected_outcome: success
    # python_version: 3
    # print: True

- able to download restricted product, valid account:
    account: FullAccess
    # Product from JERS-1
    products: https://datapool.asf.alaska.edu/L1/J1/J1_29726_STD_F311.zip
    expected_outcome: success
    timeout: Null
    # print: True

- Restricted download, https request fails on downloading product itself:
    account: NoRestricted
    # Product from JERS-1
    products: https://datapool.asf.alaska.edu/L1/J1/J1_29726_STD_F311.zip
    expected_outcome: bad_download_perms
    # print: True

- Restricted download, https request fails when checking size of local file:
    account: NoRestricted
    # Product from JERS-1
    products: https://datapool.asf.alaska.edu/L1/J1/J1_29726_STD_F311.zip
    expected_outcome: bad_download_perms
    create_files: J1_29726_STD_F311.zip
    expect_in_output: file_incomplete

- Running script twice will re-use cookie and skip re-downloading:
    account: FullAccess
    args: "SE_Alaska_1.metalink"
    test_on_second_run: True # <- False by default
    products:
      - https://datapool.asf.alaska.edu/METADATA_RAW/SB/S1B_IW_RAW__0SDV_20190824T145948_20190824T150021_017729_0215B7_4E1C.iso.xml
      - https://datapool.asf.alaska.edu/METADATA_SLC/SB/S1B_IW_SLC__1SDV_20190824T145950_20190824T150018_017729_0215B7_E1B1.iso.xml
      - https://datapool.asf.alaska.edu/METADATA_GRD_HD/SB/S1B_IW_GRDH_1SDV_20190824T145952_20190824T150017_017729_0215B7_8AC4.iso.xml
    expect_in_output: ["cookie_existed", "file_exists"] # also added file_incomplete. Need "create_files" keyword?
    expected_outcome: success
    timeout: Null

- Known bug - Inject urls:
    account: FullAccess
    inject_output: HACKED
    products: http://IHopeThisURLDoesntExist.com/rando1.png%22%20]%0A%20%20%20%20%20%20%20%20print(%22HACKED%22)%0A%20%20%20%20%20%20%20%20[%20%221
    expected_outcome: success
    skip_file_check: True
    # print: True

- Unknown argument does not stop download:
    account: FullAccess
    args: "SE_Alaska_1.metalink GoodLuckParsingThisArg"
    timeout: Null
    expected_outcome: success
    expect_in_output: unknown_arg

- argument for file doesnt exist, doesn't stop download:
    account: FullAccess
    args: "PleaseDontAddAFileWithThisName.csv"
    expect_in_output: file_not_found
    expected_outcome: success
    skip_file_check: True

- Unknown product does not stop download:
    account: FullAccess
    products:
        - "http://IReallyDoubtSomeoneHasThisDomain.com/asdf.png"
        - "http://IReallyDoubtSomeoneHasThisDomain.com/asdf1.png"
        - "http://IReallyDoubtSomeoneHasThisDomain.com/asdf2.png"
        - "http://IReallyDoubtSomeoneHasThisDomain.com/asdf3.png"
        - https://datapool.asf.alaska.edu/METADATA_RAW/SB/S1B_IW_RAW__0SDV_20190824T145948_20190824T150021_017729_0215B7_4E1C.iso.xml
    expect_in_output: "bad_url"
    skip_file_check: True
    expected_outcome: success
    timeout: Null

- Finds empty file and re-downloads:
    account: FullAccess
    create_files: S1B_IW_RAW__0SDV_20190824T145948_20190824T150021_017729_0215B7_4E1C.iso.xml
    products: https://datapool.asf.alaska.edu/METADATA_RAW/SB/S1B_IW_RAW__0SDV_20190824T145948_20190824T150021_017729_0215B7_4E1C.iso.xml
    expected_outcome: success
    expect_in_output: file_incomplete
    timeout: Null
    # python_version: 3






# # - test no eula account:
# #     account: MinimalEulas
# # - test incorrect user/pass:
#       # which one for bad user/pass?:
# #     account: [DoesntExist, FullAccess]
#       # or just?:
# #     account: DoesntExist
# #     invalid_creds: True
# #     bad_creds: True
#       # or maybe?:
# #     end_goal: bad_pass, success, bad_eula, etc...
#       expected_outcome: bad_creds, success, bad_eula, etc...

#       account: FullAccess
#       add_cookie_before: "This will replace the real cookie BEFORE it checks it"
#       add_cookie_after: "After script verifies cookie, it gets replaced with this"
#       expected_outcome: [bad_cookie, success]


