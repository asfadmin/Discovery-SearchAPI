tests:
- full access account:
    account: FullAccess
    python_version: [2,3] # <- Default
    args: ""  # <- Default
    expected_outcome: success
    # print: True

- bad user pass:
    account: DoesntExist
    python_version: 3
    expected_outcome: bad_creds
    # print: True

- minimal eulas checked account:
    account: MinimalEulas
    python_version: 3
    expected_outcome: bad_eula
    # print: True

- asf eulas checked, but not earthdatas:
    account: OnlyEulaASF
    python_version: 3
    expected_outcome: success # for now? Check again w/ input tests...
    # print: True

- no study area account:
    account: NoStudyArea
    python_version: 3
    expected_outcome: bad_study_area
    # print: True

- incorrect file input doesn't stop download:
    print: True
    account: FullAccess
    args: "PleaseDontAddAFileWithThisName.csv"
    # Things that might go wrong, but not fatal:
    expect_in_output: file_not_found
    # timeout: Null #<- timeout = Null/int seconds
    # The very-end goal of the test:
    expected_outcome: success



- input csv file:
    account: FullAccess
    # python_version: 3
    args: "input_file.csv"
    timeout: Null

- input metalink file:
    account: FullAccess
    # python_version: 3
    args: "SE_Alaska_1.metalink"
    timeout: Null

- input products:
    account: FullAccess
    # python_version: 3
    timeout: Null
    products: 
      - https://datapool.asf.alaska.edu/METADATA_RAW/SB/S1B_IW_RAW__0SDV_20190824T145948_20190824T150021_017729_0215B7_4E1C.iso.xml
      - https://datapool.asf.alaska.edu/METADATA_SLC/SB/S1B_IW_SLC__1SDV_20190824T145950_20190824T150018_017729_0215B7_E1B1.iso.xml
      - https://datapool.asf.alaska.edu/METADATA_GRD_HD/SB/S1B_IW_GRDH_1SDV_20190824T145952_20190824T150017_017729_0215B7_8AC4.iso.xml


- restricted datasets downloads success:
    account: FullAccess
    # Product from JERS-1
    products: https://datapool.asf.alaska.edu/L1/J1/J1_29726_STD_F311.zip
    expected_outcome: success

- restricted datasets downloads bad account:
    account: NoRestricted
    # Product from JERS-1
    products: https://datapool.asf.alaska.edu/L1/J1/J1_29726_STD_F311.zip
    expected_outcome: bad_download_perms
    # print: True



- Testing running the script a second time:
    account: FullAccess
    args: "SE_Alaska_1.metalink"
    timeout: Null
    test_on_second_run: True # <- False by default
    expected_outcome: success
    products: 
      - https://datapool.asf.alaska.edu/METADATA_RAW/SB/S1B_IW_RAW__0SDV_20190824T145948_20190824T150021_017729_0215B7_4E1C.iso.xml
      - https://datapool.asf.alaska.edu/METADATA_SLC/SB/S1B_IW_SLC__1SDV_20190824T145950_20190824T150018_017729_0215B7_E1B1.iso.xml
      - https://datapool.asf.alaska.edu/METADATA_GRD_HD/SB/S1B_IW_GRDH_1SDV_20190824T145952_20190824T150017_017729_0215B7_8AC4.iso.xml
    expect_in_output: ["cookie_exists", "file_exists"] # also added file_incomplete. Need "create_file" keyword?
    expected_outcome: success


# # - test no eula account:
# #     account: MinimalEulas
# # - test incorrect user/pass:
#       # which one for bad user/pass?:
# #     account: [DoesntExist, FullAccess]
#       # or just?:
# #     account: DoesntExist
# #     invalid_creds: True
# #     bad_creds: True
#       # or maybe?:
# #     end_goal: bad_pass, success, bad_eula, etc...
#       expected_outcome: bad_creds, success, bad_eula, etc...

#       account: FullAccess
#       add_cookie_before: "This will replace the real cookie BEFORE it checks it"
#       add_cookie_after: "After script verifies cookie, it gets replaced with this"
#       expected_outcome: [bad_cookie, success]


